<#@ template language="C#" HostSpecific="True"  inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="EnvDTE" #>
using System.ComponentModel.DataAnnotations;
<#    if(!string.IsNullOrEmpty(Model.ModelTypeNamespace)) { #>
using <#=            Model.ModelTypeNamespace #>;
<#    } #>
using <#=        Model.ViewModelMetaDataNameSpace #>;

namespace <#=        Model.ViewModelNameSpace #>
{   
<# 
    var modelType = (CodeType)Model.ModelType; 
    var modelName = modelType.Name; 
    var modelNamePlural = Model.ModelTypePluralized; 
    var contextName = ((CodeType)Model.DbContextType).Name; 
    var primaryKeyProperty = modelType.VisibleMembers().OfType<CodeProperty>().Single(x => x.Name == Model.PrimaryKey);

    var allProperties =  modelType.VisibleMembers().OfType<CodeProperty>();

#>

	public class <#=        modelName #>SearchCriteria
    {
	
<#    foreach(var prop in allProperties) { #>
		[Display(Name = "<#=            GetDisplayName(prop) #>")]		 
        public  <#=            prop.Type.AsString  #><#=IsNullableType(prop.Type) ? "":"?" #>  <#=            prop.Name #>{ get; set; }	
		
<#    } #> 
	}

}
<#+
    string GetDisplayName(CodeProperty prop){
        if (string.IsNullOrWhiteSpace(prop.DocComment))
            return prop.Name;
        return GetCleanDocument(prop.DocComment);
    }
    string GetCleanDocument(string doc)
    {	
        return 
            doc
            .Replace("<doc>","")
            .Replace("</doc>","")
            .Replace("<summary>","")
            .Replace("</summary>","")
            .Replace("\r","")
            .Replace("\n","")
            .Replace(@"///","")
            .Trim();
    }

    bool IsNullableType(CodeTypeRef codeType)
    {
        if (codeType.TypeKind == vsCMTypeRef.vsCMTypeRefBool || 
            codeType.TypeKind == vsCMTypeRef.vsCMTypeRefByte ||
            codeType.TypeKind == vsCMTypeRef.vsCMTypeRefChar ||
            codeType.TypeKind == vsCMTypeRef.vsCMTypeRefDecimal ||
            codeType.TypeKind == vsCMTypeRef.vsCMTypeRefDouble ||
            codeType.TypeKind == vsCMTypeRef.vsCMTypeRefFloat ||
            codeType.TypeKind == vsCMTypeRef.vsCMTypeRefInt ||
            codeType.TypeKind == vsCMTypeRef.vsCMTypeRefLong ||
            codeType.TypeKind == vsCMTypeRef.vsCMTypeRefShort || 
            codeType.AsString == "Guid" ||
            codeType.AsString == "DateTime" ||
            codeType.AsString == "System.Guid" ||
            codeType.AsString == "System.DateTime"
            )
            return false;
        return true;
    }
#>