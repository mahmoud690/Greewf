TODO:

1- tabular...
2- windows ...
3- layouts...
4- styling rules... & page formats...
5- editor-focus, emphasize,

link style :
<a class="t-button t-grid-edit t-button-icon at-rowEdit" href='...' title='...' supportFile='xxx' (inline='xxx' | newwindow='xxx'|justwindow='xxx'|justMain='xxx' | responsiveAjax='xxx'|tooltipWindow='xxx') windowcallback='ContactGridCallBack' winWidth='50' winHeight='50' winMax='true' winNoModal='1' windowActionsNeedConfirm='true' winNoMaximaizable='x' winDisableBackHide='x' winEnableBackHide='x' ajax='1' isPageCloser='1' showEvents='click...' hideEvents='click unfocus...' autoGrowingSize='1' winAutoButtonsBar='1' discardSuccessMessage='1' sendMethod='POST/PUT/...' getPostDataCallBack='functionName'> ....</a>
	classes : link,show-icon,link hover-classic,t-link

	winDisableBackHide = در صورتی که می خواهید پنجره پشتی در زمان باز شدن پنجره جدید مخفی نشود
	winEnableBackHide = در صورتی که می خواهید پنجره پشتی در زمان باز شدن پنجره جدید حتما مخفی شود 
	winNoModal= آیا نمایش به صورت مودال نباشد
	winNoMaximaizable = ماکیزمایز پذیر نباشد!
	windowcallback = function (url,data,isSuccessfulFlagUp){} :: data = {link:xx, closingFetchedData: yyy, pageUrl:zzz}
	winAutoButtonsBar = مشخص میکند که آیا دکمه های در محل مخصوص و پایین پنجره قرار بگیرند یا خیر
	responsiveAjax = اگر اکشنی که انجام می دهد نتیجه اش یک متنی است که تنها می بایست در پنجره مربوطه نمایش داده شود. مثلا وقتی کالا به سبد خرید اضافه می شود و نتیجه این است که "کالا اضافه شد" از این موارد استفاده می شود.
					* در هر حالتی که نتیجه  از نوع json باشد سیستم آنرا به صورت ResponsiveJsonResult هندل می کند
	responsiveAjaxProgress = در صورتیکه بخواهید یک پروگرس بار تا قبل از رسیدن نتیجه نمایش داده شود . توجه : مقدار false تنها مقداری است که به معنی عدم نمایش می باشد
	tooltipWindow=  آیا در یک تول تیپ باز کند؟
	autoGrowingSize = اندازه پنجره/تول تیپ را با تغییر اندازه محتوای آن بطور خودکار تغییر دهد ** توجه : در صورتی که ارتفاع و یا عرض تنظیم شده باشد در آن بعد غیرفعال می شود فعلا
	autoCenteredGrowingSize = همان بالایی با این تفاوت که پنجره را در مرکز صفحه نیز قرار می دهد
	discardSuccessMessage = اینکه پیغام موفقیت را نمایش ندهد
	isPageCloser = آیا این دکمه باعث بسته شدن صفحه می گردد؟ -- فعلا فقط در حالت آجاکسی کار میکند -- در صورتی که به ولیدیشن صفحه نیاز دارید نوع دکمه را سابمیتی انتخاب کنید
	pageCloserDataFetcher = نام فانکشنی که داده مربوطه را به صدازننده ارسال می کند --فعلا فقط در حالت آجاکسی کار میکند
	** : دو ویژگی بالا با هم و بر روی صفحه داخلی یک پنجره یا تولتیپ قرار می گیرند. اگر می خواهید یک دکمه در نقش "انصراف" باشد کافیست که با تابع دوم این موضوع را به صفحه اصلی پاس داده و آنجا متوجه شوید که چه چیزی در صفحه  داخلی پنجره رخ داده است
	*** : اگر می خواهید حتی با "سابمیت" هم این تابع فراخوانی شود لازم است که این ویژگی را بر روی دکمه سابمیت مربوطه تعریف کنید. نکته خیلی مهم این است که دکمه سابمیت مربوطه باید حتما ویژگی "نام" آن حتما تنظیم شده باشد
	*** : منظور از نام = Name
	*** : مقدار بازگردانده شده از تابع درونی به تابع بیرونی و دریافت کننده وضعتیت پنجره از طریق پارامتر "دیتا" و زیر آیتم زیر بازگردانده می شود :
	*** : closingFetchedData

	showevents = رویدادهایی که باعث نمایش آن می شوند : فعلا فقط برای تولتیپ -- کاملا بر اساس "کیو تیپ" می باشد (http://api.jquery.com/category/events/)
	hideevents = رویدادهایی که باعث بسته شدن آن می شوند : فعلا فقط برای تولتیپ -- کاملا بر اساس "کیو تیپ" می باشد (http://api.jquery.com/category/events/) 
	windowActionsNeedConfirm = اگر بخواهیم که رفرش شدن پنجره یا بسته شدن پنجره با تایید کاربر باشد
	winMaxHeight = حداکثر طول مجاز پنجره. در حال حاضر فقط در تولتیپ پیاده سازی شده است
	sendMethod = مشخص می کند که درخواست از  چی روش ارسال شود؟ مقادیر پروتکل های اچ.تی.تی.پی مجاز هستند
	getPostDataCallBack= نام تابعی است که در هنگام ارسال اطلاعات صدا زده می شود تا بخش "دیتا" درخواست "آجاکس" توسط آن عینا پر شود. بطور مشخص برای درخواست های از نوع "گت" اگرچه این تابع فراخوانی می شود اما طبق پروتکل "اچ.تی.تی.پی" این بخش ارسال نمی شود
	supportFile = برای توضیحات به پایین صفحه مراجعه کنید
functions : xxxx= {window یا tooltip}
	layoutHelper.xxxxLayout.MaximizeToContent = function (adjustCenter)  یک ویجت پنجره یا تولتیپ را با محتوای آن هم اندازه می کند. پارامتر مشخص می کند که بعد از تغییر اندازه آنرا در مرکز پنجره کند یا خیر.


supportFile:
	در استفاده از این ویژگی دقت کنید جراکه :
	1- فقط با ویژگی ajax قابل استفاده است و بدون آن بی معنی است.
	2- باعث می شود درخواست شما از طریق Iframe ارسال و دریافت شود و در واقع آجاکسی نیست 
	3- اگرچه ارسال درخواست از طریق Ifrmae است اما شما می توانید هم از GET و هم از POST استفاده کنید. کافیست از ویژگی sendMethod برای لینک مربوطه بهره ببرید
	4- بصورت هوشمند در صورتیکه فایل بازگردانده نشود و با توجه به محدودیت های ذکر شده محتوا را هندل می کند اما همانطور که در بند 2 گفته شد درخواست شما فق الواقع آجاکسی نیست
	5- نکته مهم دیگر اینکه اگر پاسخ فایل نباشد گریف مجدد درخواست را بصورت اجاکسی ارسال می کند چراکه باید بتواند "هدر"های پاسخ دریافتی را برای
	   بررسی بیشتر چک کند. لذا در مواردی که فایل بر نمی گردد همیشه دو درخواست ارسال می شود. اول از طریق "آی فریم" و دوم از طریق " آجاکس" ارسی می شود.
	6- حتما با یکی از Widget های window و tooltip باید استفاده شود و خارج از آن بی معنی است. البته در حالت های چند صفحه ای سریع کاربرد دارد
	7- ** توجه : این امکان را برای فایل های ثابت نمی توان استفاده کرد و لازم است که فایل از طریق کنترلری که از مبنای گریفی ارث برده باشد رد شود
	8- تنها در حالت چند صفحه ای سریع  "پروگرس" برای فایل هایی که نه window باشند و نه Tooltip نمایش داده می شود.

	مثال :
	<a href="/bloob/boo/" ajax="1" newwindow="1" supportfile="1" sendMethod="POST">Download File...</a>

	در صورتیکه یک فرم پس از "سابمیت" کردن می خواهد یک فایل را باز گرداند کافیست این ویژگی به فرم افزوده شود. بطور مثال : 
	<form action="/bloob/boo/" method="post" supportfile="1">        
		....
	</form>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

class='g-window-nobuttonbar' در صورتی که می خواهید یکسری دکمه ها در پایین پنجره قرار نگیرند این کلاس را به کانتینر دکمه ها بدهید
class='g-buttons-content'در صورتی که می خواهید بخشی به پایین پنجره منتقل شود
class='g-warning-content' قالب نمایش هشدار که عموما برا حذف در پنجره ها مورد استفاده قرار می گیرد
class='g-noEnterSubmit' باعث می شود دکمه اینتر باعث سابمیت شدن فرم در خود آن تگ و تمامی تگ های اینپوت آن نگردد
QueryString keys :
enforceLayout=1
istab=1
iswindow=1
simplemode=1
puremode=1
SavedSuccessfully=1
briefView=1 // فقط برای صفحه سرچ که باعث می شود از گرید خلاصه در نمایش استفاده کند. همچنین با ایجاد یک شناسه منحصر ترکیب با حالت های آجاکسی را نیز پشتیبانی می کند

sprite images:
use : 
	1. @Sprite.Image("~/App_Sprites/myImage.jpg")  OR
	2. if you are limitted to src and css class (for example: telerik panel bar) 
		A. add the image path as a class : class="subDirectoryOne/subDirectoryTwo/myImage-png" (note!: replace dots with dashes)
		B. set the source to Global.InlineImagePlaceHolder constant 
		example :
			.ImageUrl(Commons.InlineImagePlaceHolder)
			.ImageHtmlAttributes(new { @class = "gohome-png" })
	3. or add class manually : <span class="icon16 filename-xxx"></span>  ::don't forget to use icon16 class name


Messages in client side(javascript) : 
Question(sample) : 
	
	NOTE: the 3d parameter and all of its value are optional.
	layoutHelper.core.ShowQuestionMessage('...آیا',
										 'عنوان...', 
										 { callBack: function (a) { alert(a); }, 
										   focusToYes: false, 
										   yesText: '....', 
										   noText: '....' });




