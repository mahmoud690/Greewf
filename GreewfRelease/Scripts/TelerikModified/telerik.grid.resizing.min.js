!function (e) { var t = e.telerik, r = !0; t.scripts.push("telerik.grid.resizing.js"), t.resizing = {}, t.resizing.initialize = function (n) { function i(t, r) { e("th, th .t-grid-filter, th .t-link", t).add(document.body).css("cursor", r) } function a(t) { var r = 0; return e("> .t-grouping-header, > .t-grid-top", t).each(function () { r += this.offsetHeight }), r } function d(t) { var i = 0; e(".t-resize-handle", n.element).each(function () { i += e(this).data("th").outerWidth(), e(this).css(r ? "right" : "left", i - m) }), i = -n.$tbody.closest(".t-grid-content").scrollLeft(), t.prevAll("th").add(t).each(function () { i += this.offsetWidth }); var d = n.scrollable ? e(".t-grid-content", n.element) : e("tbody", n.element), l = d.attr(n.scrollable ? "clientWidth" : "offsetWidth"); i >= l ? p.remove() : (p.css({ right: r ? i : void 0, left: r ? void 0 : i, top: a(n.element), height: t.outerHeight() + d.attr(n.scrollable ? "clientHeight" : "offsetHeight") }), p.parent().length || p.appendTo(n.element)) } function l(t) { var r = t.$draggable.data("th"), i = e.inArray(r[0], r.parent().children(":visible")), a = n.$tbody.parent(); h = n.scrollable ? n.$header.parent().prev().find("col:eq(" + i + ")").add(a.children("colgroup").find("col:eq(" + i + ")")).add(n.$footerWrap.find(">table>colgroup>col:eq(" + i + ")")) : a.children("colgroup").find("col:eq(" + i + ")"), f = t.pageX, u = r.outerWidth(), g = n.$tbody.outerWidth() } function o(e) { e.$draggable.dragCalled = !0; var t = u + (r ? f - e.pageX : e.pageX - f); t > 10 && (h.css("width", t), n.scrollable && n.$tbody.parent().add(n.$headerWrap.find("table")).add(n.$footer.find("table")).css("width", g + (r ? f - e.pageX : e.pageX - f)), d(e.$draggable.data("th"))) } function s(e) { if (p.remove(), i(n.element, ""), e.$draggable.dragCalled) { var r = e.$draggable.data("th"), a = r.outerWidth(); n.onColumnResize && a != u && t.trigger(n.element, "columnResize", { column: n.columns[n.$columns().index(r)], oldWidth: u, newWidth: a }) } return !1 } function c(h) { var g, u = 0, f = n.element.id + "-column-resizing"; h && "mouseenter" === h.type && e(n.element).unbind("mouseenter", c); var p = t.draggable.get(f); p && p.destroy(), n.$headerWrap.add(n.element).find("> .t-resize-handle").remove(); var b = n.$header.find(".t-header:visible"); b.each(function (t, l) { u += this.offsetWidth, r && t == b.length - 1 && (u -= m); var o = e(this); e('<div class="t-resize-handle" />').css({ right: r ? u - m : void 0, left: r ? void 0 : u - m, top: n.scrollable ? 0 : a(n.element), width: 2 * m }).appendTo(n.scrollable ? n.$headerWrap : n.element).data("th", o).mousedown(function () { d(o), g = e(this), i(n.element, g.css("cursor")) }) }), e(document).mouseup(function () { g && (s({ $draggable: g }), g = null) }), new t.draggable({ owner: n.element, selector: ".t-resize-handle", scope: f, distance: 0, start: l, drag: o, stop: s }) } var h, g, u, f, p = e('<div class="t-grid-resize-indicator" />'), m = 3; c(), e(n.element).one("mouseenter", c).bind("repaint", c) } }(jQuery);